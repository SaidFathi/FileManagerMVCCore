// <auto-generated />
using System;
using FileManagerMVCCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileManagerMVCCore.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20200809200904_initmigation")]
    partial class initmigation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileManagerMVCCore.Areas.FileManager.Entities.FileItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFolder")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("FileItems");
                });

            modelBuilder.Entity("FileManagerMVCCore.Areas.FileManager.Entities.FileItem", b =>
                {
                    b.HasOne("FileManagerMVCCore.Areas.FileManager.Entities.FileItem", "File")
                        .WithMany("Files")
                        .HasForeignKey("FileId");
                });
#pragma warning restore 612, 618
        }
    }
}
